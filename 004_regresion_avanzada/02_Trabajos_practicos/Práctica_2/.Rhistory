knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
trees$Girth = trees$Girth*0.083333333
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
trees$Volume = log(trees$Volume)
trees$Girth = log(trees$Girth)
trees$Height = log(trees$Height)
modelo = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(modelo)
confint(modelo, level = 0.9)
library(car)
linearHypothesis(model = modelo,
hypothesis.matrix = matrix(data = c(1, 0, 0,
0, 1, 0,
0, 0, 1),
nrow = 3, ncol = 3),
rhs = c(log(pi * 0.083333333^2/4), 2, 1))
print("La matriz de correlaciones de los coeficientes estimados de nuestro modelo queda: ")
vcov(modelo)
print("Observamos que en la diagonal principal se encuentran las varianzas de los coeficientes estimados del modelo.")
sqrt(diag(vcov(modelo)))
linearHypothesis(model = modelo,
hypothesis.matrix = c(0, 1, -2),
rhs = 0)
fuel <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/fuel.txt", sep="")
# head(fuel)
summary(fuel)
pairs(fuel)
cor(fuel, method = "spearman")
hist(fuel$FuelC, col = "brown",
main = "DISTRIBUCION VARIABLE TARGET",
xlab = "GALONES DE COMBUSTIBLE VENDIDO")
modelo_fuel = lm(FuelC ~ Drivers + Income + Miles + MPC + Tax, data = fuel)
summary(modelo_fuel)
modelo_fuel_no_drivers = lm(FuelC ~ Income + Miles + MPC + Tax, data = fuel)
summary(modelo_fuel_no_drivers)
linearHypothesis(modelo_fuel, hypothesis.matrix = c("Drivers = 0",
"Income = 0",
"Miles = 0",
"MPC = 0",
"Tax = 0"))
summary(modelo_fuel)
cbind(modelo_fuel$coef[c(1:2, 4)],
confint(modelo_fuel, level = 0.95,
parm = c("(Intercept)","Drivers", "Miles")))
vcov(modelo_fuel)[2:3, 2:3]
# library(car)
linearHypothesis(model = modelo_fuel,
hypothesis.matrix = c(0, 1, -1, 0, 0, 0), # B1,B2,B3,B4,B5,B6 Intercept, drivers, income, miles, mpc, tax
rhs = 0)
library(ellipse)
plot(ellipse(modelo_fuel, which = c(2, 3), level = 0.95),
col = "darkblue", main = "ELIPSOIDE DE CONFIANZA 95%")
new_data = data.frame(Drivers = 2718209, Income = 27871,
Miles = 78914, MPC = 10458.4,
Tax = 20)
#Intervalo de confianza:
predict(modelo_fuel, newdata = new_data,
interval = c("confidence"), level = 0.90)
#Intervalo de prediccion:
predict(modelo_fuel, newdata = new_data,
interval = c("predict"), level = 0.90)
anova(modelo_fuel)
anova(modelo_fuel_no_drivers, modelo_fuel)
water <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/water.txt", sep="")
#Vamos a convertir la variables explicativas de pulgadas a metros y el target a metros cubicos
water[, 2:7] = water[, 2:7] * 0.0254
water[, 8] = water[, 8]*1233.4818375475
# head(water)
summary(water)
pairs(water)
cor(water, method = "spearman")
hist(water$BSAAM, col = "brown",
main = "DISTRIBUCION VARIABLE TARGET",
xlab = "VOLUMEN DE ESCORRENTIA")
modelo_water = lm(BSAAM ~ OPBPC + OPRC + OPSLAKE, data = water)
(summary_water = summary(modelo_water))
features_water = water %>%
select(c("OPBPC", "OPRC", "OPSLAKE"))
pairs(features_water)
cor(features_water, method = "spearman")
summary_water
summary_water
summary_water$coefficients[2:3,]
modelo_water_sin_restricciones = lm(BSAAM ~ ., data = water)
anova(modelo_water, modelo_water_sin_restricciones)
cbind(modelo_water_sin_restricciones$coefficients,
confint(modelo_water_sin_restricciones, level = 0.95))
new_data_water = data.frame(Year = mean(water$Year),
APMAM = mean(water$APMAM),
APSAB = mean(water$APSAB),
APSLAKE = mean(water$APSLAKE),
OPBPC = mean(water$OPBPC),
OPRC = mean(water$OPRC),
OPSLAKE = mean(water$OPSLAKE))
predict(modelo_water_sin_restricciones, newdata = new_data_water,
interval = c("confidence"), level = 0.95)
predict(modelo_water_sin_restricciones, newdata = new_data_water,
interval = c("predict"), level = 0.95)
esperanza2015 <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/esperanza2015.txt", sep="")
esperanza2015 = esperanza2015[, 1:9] #dropeamos la feature status
summary(esperanza2015)
pairs(esperanza2015[, 2:8])
hist(esperanza2015$life.2015, col = "brown",
main = "DISTRIBUCION VARIABLE TARGET",
xlab = "ESPERANZA DE VIDA AL NACER")
modelo_life_1 = lm(life.2015 ~ child.2015, data = esperanza2015)
(summary_life_1 = summary(modelo_life_1))
modelo_life_2 = lm(life.2015 ~ child.2015 + I(child.2015^2), data = esperanza2015)
(summary_life_2 = summary(modelo_life_2))
plot(esperanza2015$life.2015 ~ esperanza2015$child.2015,
col = "blue", main = "LIFE ~ CHILD",
xlab = "Tasa de mortalidad", ylab = "Esperanza de vida")
lines(y = summary_life_1$coefficients[1] + summary_life_1$coefficients[2] * esperanza2015$child.2015,
x = esperanza2015$child.2015, col = "red", lwd = 3)
points(y = summary_life_2$coefficients[1] + summary_life_2$coefficients[2] *
esperanza2015$child.2015 + summary_life_2$coefficients[3] *
(esperanza2015$child.2015^2), x = esperanza2015$child.2015,
col = "green", xlab = "Tasa de mortalidad ^ 2",
ylab = "Esperanza de vida", lwd = 2)
legend("topright",
c("LIFE = B0 + B1 * Child + e",
"LIFE = B0 + B1 * Child + B2 * Child^2 + e"),
fill = c("red", "green"), cex = 0.8)
plot(esperanza2015$life.2015 ~ esperanza2015$dtp3.2010, main = "Target ~ dtp3.2010")
modelo_life_3 = lm(life.2015 ~ dtp3.2010, data = esperanza2015)
(summary_life_3 = summary(modelo_life_3))
plot(esperanza2015$life.2015 ~ esperanza2015$dtp3.2010, main = "Target ~ dtp3.2010")
lines(y = summary_life_3$coefficients[1] + summary_life_3$coefficients[2] * esperanza2015$dtp3.2010,
x = esperanza2015$dtp3.2010, col = "red", lwd = 3)
modelo_life_4 = lm(life.2015 ~ dtp3.2010 + child.2015, data = esperanza2015)
(summary_life_4 = summary(modelo_life_4))
esperanza2=na.omit(esperanza2015[ ,c(2:4, 7:9)])
modelo_life_1 = lm(life.2015 ~ child.2015, data = esperanza2)
modelo_life_2 = lm(life.2015 ~ child.2015 + I(child.2015^2), data = esperanza2)
modelo_life_3 = lm(life.2015 ~ dtp3.2010, data = esperanza2)
modelo_life_4 = lm(life.2015 ~ dtp3.2010 + child.2015, data = esperanza2)
modelo_life_full = lm(life.2015 ~ income.2015 + child.2015 + dtp3.2010 +
school.2015 + hdi.2015, data = esperanza2)
# summary(modelo_life_full)
modelo_life_5 = lm(life.2015 ~ child.2015 + school.2015 + hdi.2015,
data = esperanza2)
# summary(modelo_life_5)
anova(modelo_life_1, modelo_life_2, modelo_life_3, modelo_life_4, modelo_life_5, modelo_life_full)
anova(modelo_life_5, modelo_life_full)
data_life = data.frame("child.2015" = c(1:183))
#Intervalo de confianza:
int_confianza = predict(modelo_life_2, newdata = data_life,
interval = c("confidence"), level = 0.95)
#Intervalo de prediccion:
prediccion = predict(modelo_life_2, newdata = data_life,
interval = c("predict"), level = 0.95)
plot(esperanza2$life.2015 ~ esperanza2$child.2015, pch = 16,
main = "INTERVALOS DE CONFIANZA Y PREDICCION MODELO 2",
col = "brown", lwd = 2, xlab = "CHILD", ylab = "ESPERANZA DE VIDA")
points(x = data_life$child.2015, y = int_confianza[, 2], col = "darkblue")
points(x = data_life$child.2015, y = int_confianza[, 3], col = "darkblue")
points(x = data_life$child.2015, y = prediccion[, 2], col = "darkgreen")
points(x = data_life$child.2015, y = prediccion[, 3], col = "darkgreen")
lines(y = summary_life_2$coefficients[1] + summary_life_2$coefficients[2] * data_life$child.2015 + summary_life_2$coefficients[3] * data_life$child.2015^2,
x = data_life$child.2015, col = "violet", lwd = 2)
legend("topright",
c("INTERVALO DE CONFIANZA 95%", "INTERVALO DE PREDICCION 95%"),
fill = c("darkblue", "darkgreen"), cex = 0.8)
AlturaGalton <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/AlturaGalton.txt", sep="")
AlturaGalton_h = AlturaGalton[AlturaGalton$gender == "male", c(1:3, 5)]
AlturaGalton_m = AlturaGalton[AlturaGalton$gender == "female", c(1:3, 5)]
summary(AlturaGalton_h)
pairs(AlturaGalton_h, main = "ALTURA GALTON HOMBRES")
summary(AlturaGalton_m)
pairs(AlturaGalton_m, main = "ALTURA GALTON MUJERES")
cor(AlturaGalton_h, method = "spearman")
cor(AlturaGalton_m, method = "spearman")
par(mfrow = c(1, 2), oma = c(0, 0, 2, 0))
hist(AlturaGalton_h$childHeight, col = "brown",
xlab = "ALTURA DEL HIJO", main = "")
hist(AlturaGalton_m$childHeight, col = "brown", main = "",
xlab = "ALTURA DE LA HIJA")
mtext("DISTRIBUCION VARIABLES TARGET", line =0, side = 3, outer = T, cex = 2)
modelo_altura_h = lm(childHeight~., data = AlturaGalton_h)
(summary_altura_h = summary(modelo_altura_h))
modelo_altura_h = lm(childHeight~., data = AlturaGalton_h)
(summary_altura_h = summary(modelo_altura_h))
modelo_sin_mother_h = lm(childHeight ~ father + midparentHeight, data = AlturaGalton_h)
summary(modelo_sin_mother_h)
linearHypothesis(model = modelo_sin_mother_h,
hypothesis.matrix = c(0, 1, 0),
rhs = 0)
modelo_sin_mother_m = lm(childHeight ~ father + midparentHeight, data = AlturaGalton_m)
summary(modelo_sin_mother_m)
linearHypothesis(model = modelo_sin_mother_m,
hypothesis.matrix = c(0, 1, 0),
rhs = 0)
anova(lm(childHeight ~ midparentHeight, data = AlturaGalton_h) , modelo_sin_mother_h)
anova(lm(childHeight ~ midparentHeight, data = AlturaGalton_m) , modelo_sin_mother_m)
anova(lm(childHeight ~ midparentHeight, data = AlturaGalton_h) ,
lm(childHeight ~ midparentHeight + mother, data = AlturaGalton_h))
anova(lm(childHeight ~ midparentHeight, data = AlturaGalton_m) ,
lm(childHeight ~ midparentHeight + mother, data = AlturaGalton_m))
best_orphan_model_h = lm(childHeight ~ midparentHeight, data = AlturaGalton_h)
best_orphan_model_m = lm(childHeight ~ midparentHeight, data = AlturaGalton_m)
# data_midparentHeight = data.frame("midparentHeight" = seq(55,80,0.25))
data_midparentHeight = data.frame("midparentHeight" = AlturaGalton$midparentHeight)
#Intervalo de confianza:
int_confianza_height_h = predict(best_orphan_model_h,
newdata = data_midparentHeight,
interval = c("confidence"), level = 0.95)
#Intervalo de prediccion:
prediccion_height_h = predict(best_orphan_model_h,
newdata = data_midparentHeight,
interval = c("predict"), level = 0.95)
#Intervalo de confianza:
int_confianza_height_m = predict(best_orphan_model_m,
newdata = data_midparentHeight,
interval = c("confidence"), level = 0.95)
#Intervalo de prediccion:
prediccion_height_m = predict(best_orphan_model_m,
newdata = data_midparentHeight,
interval = c("predict"), level = 0.95)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT")
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.8)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT")
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.8)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT")
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT",
cex = 0.2)
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT",
cex = 0.2)
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
lines(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange")
lines(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT",
cex = 0.2)
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple")
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple")
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange", cex = 0.4)
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange", cex = 0.4)
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
plot(AlturaGalton$childHeight ~ AlturaGalton$midparentHeight,
main = "CHILDHEIGHT EXPLICADO POR MIDPARENTSHEIGHT",
ylim = c(55, 80),
xlab = "MIDPARENTHEIGHT",
ylab = "CHILD HEIGHT",
cex = 0.2)
# hombres
points(AlturaGalton_h$childHeight ~ AlturaGalton_h$midparentHeight,
col = "darkblue", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_h$midparentHeight, y = best_orphan_model_h$coeff[1] +
best_orphan_model_h$coeff[2] * AlturaGalton_h$midparentHeight,
col = "blue", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 2], col = "purple", cex = 0.4)
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_h[, 3], col = "purple", cex = 0.4)
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 2], col = "lightblue", lwd =3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_h[, 3], col = "lightblue", lwd =3)
# mujeres
points(AlturaGalton_m$childHeight ~ AlturaGalton_m$midparentHeight,
col = "pink", lwd = 2, cex = 0.2)
lines(x = AlturaGalton_m$midparentHeight, y = best_orphan_model_m$coeff[1] +
best_orphan_model_m$coeff[2] * AlturaGalton_m$midparentHeight,
col = "red", lwd = 3)
# Intervalos de confianza
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 2], col = "orange", cex = 0.4)
points(x = data_midparentHeight$midparentHeight, pch = 16,
y = int_confianza_height_m[, 3], col = "orange", cex = 0.4)
# Intervalos de prediccion
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 2], col = "gold", lwd = 3)
lines(x = data_midparentHeight$midparentHeight,
y = prediccion_height_m[, 3], col = "gold", lwd = 3)
legend("bottomright",
c("modelo male", "modelo female"),
fill = c("blue", "red"), cex = 0.9)
fuel
