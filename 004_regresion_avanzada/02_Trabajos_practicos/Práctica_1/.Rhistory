summary(modelo_cerebro)
plot(modelo_cerebro, 2)
ks.test(modelo_cerebro$residuals, "pnorm",
mean(modelo_cerebro$residuals),
sd(modelo_cerebro$residuals))
#grafico de los residuos vs predicciones
plot(modelo_cerebro, 1)
plot(y = studres(modelo_cerebro), x = modelo_cerebro$fitted.values,
main = "RESIDUOS VS PREDICHOS",
xlab = "FITTED VALUES",
ylab = "RESIDUALS",
ylim = c(-3.2, 10.5))
abline(h = 3, col = "red", lwd = 2)
abline(h = -3, col = "red", lwd = 2)
abline(h = 0, col = "darkblue", lwd = 1)
cor.test(abs(modelo_cerebro$residuals), modelo_cerebro$fitted.values,
method = "spearman")
plot(modelo_cerebro, 3)
plot(modelo_cerebro, 4)
plot(modelo_cerebro,5)
plot(modelo_cerebro,6)
modelo_cerebro_box_cox = boxcox(modelo_cerebro)
modelo_cerebro_box_cox$x[which.max(modelo_cerebro_box_cox$y)]
mammals$log_brain_wt=log(mammals$brain_wt)
modelo_cerebro_2 = lm(log_brain_wt ~ body_wt, data = mammals)
summary(modelo_cerebro_2)
plot(x = mammals$body_wt, y = mammals$log_brain_wt, col = "red",
main = "log BRAIN WT EXPLICADO POR BODY WT", xlab = "BODY_WT",
ylab = "logBRAIN_WT")
mammals$logbody_wt = log(mammals$body_wt)
plot(x = mammals$logbody_wt, y = mammals$log_brain_wt, col = "red",
main = "log BRAIN WT EXPLICADO POR log BODY WT", xlab = "log BODY_WT",
ylab = "logBRAIN_WT")
modelo_cerebro_2b = lm(log_brain_wt ~ logbody_wt, data = mammals)
summary(modelo_cerebro_2b)
plot(modelo_cerebro_2b, 2)
ks.test(modelo_cerebro_2b$residuals, "pnorm",
mean(modelo_cerebro_2b$residuals),
sd(modelo_cerebro_2b$residuals))
plot(modelo_cerebro_2b, 1)
plot(y = studres(modelo_cerebro_2b), x = modelo_cerebro_2b$fitted.values,
main = "RESIDUOS VS PREDICHOS (Box & Cox)",
xlab = "FITTED VALUES",
ylab = "RESIDUALS",
ylim = c(-3.2, 10.5))
abline(h = 3, col = "red", lwd = 2)
abline(h = -3, col = "red", lwd = 2)
abline(h = 0, col = "darkblue", lwd = 1)
cor.test(abs(modelo_cerebro_2b$residuals), modelo_cerebro_2b$fitted.values,
method = "spearman")
plot(modelo_cerebro_2b, 3)
plot(modelo_cerebro_2b, 4)
anova(lm(log_brain_wt ~ logbody_wt, data = mammals),
lm(log_brain_wt ~ logbody_wt + gestation, data = mammals),
lm(log_brain_wt ~ logbody_wt + gestation + life_span, data = mammals),
lm(log_brain_wt ~ logbody_wt + gestation + life_span + total_sleep, data = mammals))
modelo_cerebro_3 = lm(log_brain_wt ~ logbody_wt + gestation +
life_span + total_sleep, data = mammals)
summary(modelo_cerebro_3)
plot(modelo_cerebro_3)
ks.test(modelo_cerebro_3$residuals, "pnorm",
mean(modelo_cerebro_3$residuals),
sd(modelo_cerebro_3$residuals))
cor.test(abs(modelo_cerebro_3$residuals), modelo_cerebro_3$fitted.values,
method = "spearman")
plot(y = studres(modelo_cerebro_3), x = modelo_cerebro_3$fitted.values,
main = "RESIDUOS STUDENTIZADOS VS PREDICHOS (modelo 3)",
xlab = "FITTED VALUES",
ylab = "RESIDUALS",
ylim = c(-3.2, 3.2))
abline(h = 3, col = "red", lwd = 2)
abline(h = -3, col = "red", lwd = 2)
abline(h = 0, col = "darkblue", lwd = 1)
n_parametros = length(modelo_cerebro_3$coefficients)
n = nrow(mammals)
which((cooks.distance(modelo_cerebro_3) > pf(n_parametros,
n - n_parametros, 0.5)) == T)
par(mfrow=c(1,1))
plot(modelo_cerebro_3, 4)
abline(h = pf(n_parametros, n - n_parametros, 0.5), col = "red")
plot(modelo_cerebro_3, 5)
plot(modelo_cerebro_3, 6)
control = lmrobdet.control(bb = 0.5, efficiency = 0.85, family = "bisquare")
mm_modelo_cerebro = lmrobdetMM(log_brain_wt ~ logbody_wt + gestation +
life_span + total_sleep, data = mammals,
control = control)
summary(mm_modelo_cerebro)
plot(mm_modelo_cerebro, 1)
plot(mm_modelo_cerebro, 2)
ks.test(mm_modelo_cerebro$residuals, "pnorm",
mean(mm_modelo_cerebro$residuals),
sd(mm_modelo_cerebro$residuals))
cor.test(abs(mm_modelo_cerebro$residuals), mm_modelo_cerebro$fitted.values, method = "spearman")
plot(mm_modelo_cerebro, 4)
plot(studres(mm_modelo_cerebro), mm_modelo_cerebro$rweights,
main = "RESIDUOS STUDENTIZADOS VS RWEIGHTS", col = "blue",
xlab = "RESIDUOS ESTUDENTIZADOS",
ylab = "R-WEIGHTS")
fracaso <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_3/fracaso.txt", sep="")
fracaso_ols=lm(fracaso$Fracaso ~ fracaso$Renta)
summary(fracaso_ols)
plot(fracaso_ols, 1)
cor.test(abs(fracaso_ols$residuals),
fracaso_ols$fitted.values, method = "spearman")
plot(fracaso_ols, 2)
ks.test(fracaso_ols$residuals, "pnorm", mean(fracaso_ols$residuals), sd(fracaso_ols$residuals))
plot(fracaso_ols, 3)
plot(fracaso_ols, 4)
pf(length(fracaso_ols$coefficients), nrow(fracaso) - length(fracaso_ols$coefficients), 0.5)
plot(fracaso_ols, 5)
plot(fracaso_ols, 6)
control = lmrobdet.control(bb = 0.5,efficiency = 0.85, family = "bisquare")
fracaso_mm = lmrobdetMM(Fracaso ~ Renta, data = fracaso, control = control)
summary(fracaso_mm)
plot(fracaso_mm)
plot(studres(fracaso_mm), fracaso_mm$rweights,
main = "RESIDUOS STUDENTIZADOS VS RWEIGHTS", col = "blue",
xlab = "RESIDUOS ESTUDENTIZADOS",
ylab = "R-WEIGHTS")
abline(v = 3, col = "red", lwd = 2)
sort(studres(fracaso_mm), decreasing = T)[1]
sort(hatvalues(fracaso_mm), decreasing = T)
boxplot(hatvalues(fracaso_mm), main ="LEVERAGE FRACASO MM", col = "blue")
data_renta = data.frame("Renta" = fracaso$Renta)
#Intervalo de confianza:
int_confianza_fracaso = predict(fracaso_mm,
newdata = data_renta,
interval = c("confidence"), level = 0.95)
#Intervalo de prediccion:
prediccion_fracaso = predict(fracaso_mm,
newdata = data_renta,
interval = c("predict"), level = 0.95)
plot(fracaso$Fracaso ~ fracaso$Renta,
main = "FRACASO ACADEMICO EXPLICADO POR RENTA",
xlab = "RENTA",
ylab = "FRACASO",
cex = 0.2)
points(fracaso$Fracaso ~ fracaso$Renta,
col = "darkblue", lwd = 2, cex = 0.2)
lines(x = fracaso$Renta, y = fracaso_mm$coeff[1] +
fracaso_mm$coeff[2] * fracaso$Renta,
col = "blue", lwd = 3)
# Intervalos de confianza
lines(x = data_renta$Renta, pch = 16,
y = int_confianza_fracaso[, 2], col = "purple", cex = 0.4)
lines(x = data_renta$Renta, pch = 16,
y = int_confianza_fracaso[, 3], col = "purple", cex = 0.4)
# Intervalos de prediccion
# lines(x = data_renta$Renta,
#       y = prediccion_fracaso[, 2], col = "lightblue", lwd =3)
#
# lines(x = data_renta$Renta,
#       y = prediccion_fracaso[, 3], col = "lightblue", lwd =3)
legend("topright",
c("intervalo de prediccion", "intervalo de confianza"),
fill = c("lightblue", "purple"), cex = 0.9)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_3/trees.txt", sep="")
trees$Girth = log(trees$Girth)
trees$Height = log(trees$Height)
trees$Volume = log(trees$Volume)
trees_ols = lm(Volume ~ Girth + Height, data = trees)
summary(trees_ols)
plot(trees_ols, 1)
cor.test(abs(trees_ols$residuals), trees_ols$fitted.values,
method = "spearman")
plot(trees_ols, 2)
ks.test(trees_ols$residuals, "pnorm", mean(trees_ols$residuals),
sd(trees_ols$residuals))
pairs(trees)
cor(trees, method = "spearman")
plot(trees_ols, 4)
trees = trees[-18, ]
trees_ols_2 = lm(Volume ~ Girth + Height, data = trees)
summary(trees_ols_2)
par(mfrow = c(1, 2))
plot(trees_ols, 6)
plot(trees_ols, 5)
alcohol = robustbase::alcohol
head(alcohol)
summary(alcohol)
pairs(alcohol)
# ggpairs(data = alcohol)
cor(alcohol, method = "spearman")
hist(alcohol$logSolubility, main = "DISTRIBUCION DEL TARGET",
xlab = "LOG SOLUBILITY", col = "brown")
ols_alcohol=lm(logSolubility ~., data = alcohol)
summary(ols_alcohol)
plot(ols_alcohol, 1)
plot(y = studres(ols_alcohol), x = ols_alcohol$fitted.values,
main = "RESIDUOS ESTUDENTIZADOS vs FITTED VALUES",
xlab = "FITTED VALUES", ylab = "RESIDUOS ESTUDENTIZADOS",
ylim = c(-3.2, 7))
abline(h = 3, col = "red", lwd = 2)
abline(h = -3, col = "red", lwd = 2)
sort(studres(ols_alcohol), decreasing = T)[1]
plot(ols_alcohol, 2)
ks.test(ols_alcohol$residuals, "pnorm", mean(ols_alcohol$residuals),
sd(ols_alcohol$residuals))
cor.test(abs(ols_alcohol$residuals), ols_alcohol$fitted.values,
method = "spearman")
plot(ols_alcohol, 3)
control = lmrobdet.control(bb = 0.5, efficiency = 0.85, family = "bisquare")
mm_alcohol = lmrobdetMM(logSolubility ~., data = alcohol)
summary(mm_alcohol)
plot(mm_alcohol, 4)
cor.test(abs(mm_alcohol$residuals), mm_alcohol$fitted.values,
method = "spearman")
plot(mm_alcohol, 2)
ks.test(mm_alcohol$residuals, "pnorm", mean(mm_alcohol$residuals),
sd(mm_alcohol$residuals))
plot(mm_alcohol$residuals, mm_alcohol$rweights,
main = "RESIDUOS VS RWEIGHTS", col = "blue",
xlab = "RESIDUOS",
ylab = "R-WEIGHTS")
sort(mm_alcohol$rweights, decreasing = F)[1:4]
alcohol_2 = alcohol[-c(12, 39), ]
control_2 = lmrobdet.control(bb = 0.5, efficiency = 0.85, family = "bisquare")
mm_alcohol_sin_outliers = lmrobdetMM(logSolubility ~., data = alcohol_2,
control = control_2)
summary(mm_alcohol_sin_outliers)
ks.test(mm_alcohol_sin_outliers$residuals, "pnorm",
mean(mm_alcohol_sin_outliers$residuals),
sd(mm_alcohol_sin_outliers$residuals))
cor.test(abs(mm_alcohol$residuals), mm_alcohol$fitted.values,
method = "spearman")
plot(mm_alcohol_sin_outliers, 1)
cps09marsubjc <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_3/cps09marsubjc.txt", sep="")
cps09marsubjc$wage = cps09marsubjc$earnings / (cps09marsubjc$hours * cps09marsubjc$week)
summary(cps09marsubjc)
pairs(cps09marsubjc[, c("age", "education", "earnings", "hours", "wage")])
cor(cps09marsubjc[, c("age", "education", "earnings", "hours", "wage")], method = "spearman")
hist(cps09marsubjc$wage, col = "brown", main = "DISTRIBUCION DEL TARGET",
xlab = "WAGE")
modelo_cps_ols = lm(wage ~ education, data = cps09marsubjc)
summary(modelo_cps_ols)
plot(modelo_cps_ols, 1)
cor.test(abs(modelo_cps_ols$residuals), modelo_cps_ols$fitted.values,
method = "spearman")
plot(modelo_cps_ols, 2)
ks.test(modelo_cps_ols$residuals, "pnorm",
mean(modelo_cps_ols$residuals), sd(modelo_cps_ols$residuals))
plot(modelo_cps_ols, 3)
modelo_cps_ols_box_cox = boxcox(modelo_cps_ols)
modelo_cps_ols_box_cox$x[which.max(modelo_cps_ols_box_cox$y)]
cps09marsubjc$logwage = log(cps09marsubjc$wage)
modelo_cps_ols_2 = lm(logwage ~ education, data = cps09marsubjc)
plot(modelo_cps_ols_2, 1)
cor.test(abs(modelo_cps_ols_2$residuals), modelo_cps_ols_2$fitted.values,
method = "spearman")
ks.test(modelo_cps_ols_2$residuals, "pnorm",
mean(modelo_cps_ols_2$residuals), sd(modelo_cps_ols_2$residuals))
anova(lm(logwage ~ age + hisp + education + earnings + hours + week + union +
uncov + region + marital + race + female, data = cps09marsubjc),
lm(logwage ~ age + hisp + education + earnings + hours + week + union +
uncov + region + marital, data = cps09marsubjc),
lm(logwage ~ age + hisp + education + earnings + hours + week + union +
marital, data = cps09marsubjc),
lm(logwage ~ education + week + hours + earnings + age, data = cps09marsubjc),
lm(logwage ~ week + hours + earnings + age, data = cps09marsubjc),
lm(logwage ~ week + hours + earnings, data = cps09marsubjc),
lm(logwage ~ earnings + hours, data = cps09marsubjc),
lm(logwage ~ week + earnings, data = cps09marsubjc),
lm(logwage ~ earnings, data = cps09marsubjc))
modelo_cps_ols_final = lm(logwage ~ age + hisp + education + earnings + hours +
week + union + marital, data = cps09marsubjc)
summary(modelo_cps_ols_final)
control = lmrobdet.control(bb = 0.5, efficiency = 0.85, family = "bisquare")
modelo_cps_ols_finalMM = lmrobdetMM(logwage ~ age + hisp + education + earnings
+ hours + week + union + marital,
data = cps09marsubjc, control = control)
summary(modelo_cps_ols_finalMM)
plot(modelo_cps_ols_finalMM, 1)
plot(modelo_cps_ols_finalMM, 2)
ks.test(modelo_cps_ols_finalMM$residuals, "pnorm",
mean(modelo_cps_ols_finalMM$residuals),
sd(modelo_cps_ols_finalMM$residuals))
cor.test(abs(modelo_cps_ols_finalMM$residuals), modelo_cps_ols_finalMM$fitted.values, method = "spearman")
plot(modelo_cps_ols_finalMM$residuals, modelo_cps_ols_finalMM$rweights,
col = "blue", main = "PESO ASIGNADO A LAS OBS vs RESIDUOS",
xlab = "RESIDUOS", ylab = "RWEIGHTS")
usch <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_3/usch.txt", sep="")
head(usch)
plot(x = usch$ingreso, y = usch$consumo,
main = "PORCENTAJE DE CAMBIOS DEL CONSUMO
EXPLICADO POR EL INGRESO",
xlab = "INGRESO", ylab = "CONSUMO")
usch$tiempo = 1:187
plot(y = usch$ingreso, x = usch$tiempo, type = "l", col = "blue", lwd = 2,
xlab = "TIEMPO [TRIMESTRAL]", ylab = "INGRESO", main = "CONSUMO E INGRESO EN FUNCION DEL TIEMPO")
lines(y = usch$consumo, x = usch$tiempo, col = "red", lwd = 2)
legend("topright",c("CONSUMO", "INGRESO"), fill = c("red", "blue"))
consumo_ols=lm(consumo ~ ingreso, data = usch)
summary(consumo_ols)
plot(consumo_ols, 1)
plot(consumo_ols, 2)
ks.test(consumo_ols$residuals, "pnorm",
mean(consumo_ols$residuals),
sd(consumo_ols$residuals))
cor.test(abs(consumo_ols$residuals), consumo_ols$fitted.values, method = "spearman")
plot(y = studres(consumo_ols), x = usch$tiempo,
main = "RESIDUOS STUDENTIZADOS vs  TIEMPO",
xlab = "TIEMPO",
ylab = "RESIDUO STUDENTIZADO DEL MODELO")
abline(h = -3, lwd = 2, col= "red")
sort(studres(consumo_ols))[1:3]
plot(consumo_ols, 3)
plot(consumo_ols, 4)
plot(consumo_ols, 5)
(matriz_correlaciones = cor(usch))
library(lmtest)
dwtest(consumo_ols, alternative = "two.sided")
cont = 1
for (t in 2:length(usch$consumo)) {
usch[cont,"consumo_t"] = usch$consumo[t] - matriz_correlaciones[2, 1]*usch$consumo[t - 1]
usch[cont,"ingreso_t"] = usch$ingreso[t] - matriz_correlaciones[2, 1]*usch$ingreso[t - 1]
cont = cont + 1
}
consumo_ols_2 = lm(ingreso_t ~ consumo_t, data = usch)
summary(consumo_ols_2)
data(meuse.all)
summary(meuse.all)
meuse_ols=lm(meuse.all$copper ~ meuse.all$dist + meuse.all$elev + meuse.all$om)
summary(meuse_ols)
plot(meuse_ols, 1)
cor.test(abs(meuse_ols$residuals), meuse_ols$fitted.values, method = "spearman")
plot(meuse_ols, 2)
ks.test(meuse_ols$residuals, "pnorm",
mean(meuse_ols$residuals),
sd(meuse_ols$residuals))
plot(meuse_ols, 3)
plot(meuse_ols, 4)
plot(meuse_ols, 5)
plot(meuse_ols, 6)
alfa_box_cox = boxcox(meuse_ols)
alfa_box_cox$x[which.max(alfa_box_cox$y)]
meuse.all$copper_box_cox = meuse.all$copper^(-0.5)
meuse_ols_2 = lm(meuse.all$copper_box_cox ~ meuse.all$dist + meuse.all$elev + meuse.all$om)
summary(meuse_ols_2)
plot(meuse_ols_2, 1)
cor.test(abs(meuse_ols_2$residuals), meuse_ols_2$fitted.values, method = "spearman")
plot(meuse_ols_2, 2)
ks.test(meuse_ols_2$residuals, "pnorm",
mean(meuse_ols_2$residuals),
sd(meuse_ols_2$residuals))
plot(meuse_ols_2, 3)
plot(meuse_ols_2, 3)
plot(meuse_ols_2, 4)
plot(meuse_ols_2, 2)
plot(meuse_ols_2, 4)
plot(meuse_ols_2, 5)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
trees
trees$Girth = trees$Girth/100
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
a = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(a)
trees$Girth = trees$Girth/100
b = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(b)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
a = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(a)
trees$Girth = trees$Girth/1000
b = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(b)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
a = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(a)
trees$Girth = trees$Girth/100
b = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(b)
trees$Girth = trees$Girth/100
trees$Height = trees$Height/100
b = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(b)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
a = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(a)
trees$Girth = trees$Girth/100
trees$Height = trees$Height/100
b = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(b)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
trees <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/trees.txt", sep="")
# head(trees)
summary(trees)
pairs(trees)
trees %>% cor(method = "spearman")
hist(trees$Volume, main = "DISTRIBUCION VARIABLE TARGET",
col = "brown",
xlab = "VOLUMEN OBTENIDO DE MADERA")
a = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(a)
trees$Girth = trees$Girth/100
trees$Height = trees$Height/100
b = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(b)
trees$Volume = log(trees$Volume)
trees$Girth = log(trees$Girth)
trees$Height = log(trees$Height)
modelo = lm(trees$Volume ~ trees$Girth + trees$Height)
summary(modelo)
confint(modelo, level = 0.9)
library(car)
linearHypothesis(model = modelo,
hypothesis.matrix = c(1, 0, 0), rhs = c(log(pi * 0.083333333^2/4)))
library(car)
linearHypothesis(model = modelo,
hypothesis.matrix = c(0, 1, 0), rhs = c(2))
linearHypothesis(model = modelo,
hypothesis.matrix = c(0, 0, 1), rhs = c(1))
mean(modelo$residuals^2)
print("La matriz de correlaciones de los coeficientes estimados de nuestro modelo queda: ")
vcov(modelo)
print("Observamos que en la diagonal principal se encuentran los desvios de los coeficientes estimados del modelo.")
sqrt(diag(vcov(modelo)))
linearHypothesis(model = modelo,
hypothesis.matrix = c(0, 1, -2),
rhs = 0)
fuel <- read.csv("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_2/fuel.txt", sep="")
# head(fuel)
summary(fuel)
pairs(fuel)
cor(fuel, method = "spearman")
hist(fuel$FuelC, col = "brown",
main = "DISTRIBUCION VARIABLE TARGET",
xlab = "GALONES DE COMBUSTIBLE VENDIDO")
modelo_fuel_b = lm(FuelC ~ Drivers + Income + Miles + MPC + Tax, data = fuel)
summary(modelo_fuel_b)
fuel$Income = fuel$Income/100
modelo_fuel = lm(FuelC ~ Drivers + Income + Miles + MPC + Tax, data = fuel)
summary(modelo_fuel)
s_hat_intercept
t_b0 = qt(p = 1-(0.05/2), df = nrow(florida) - 2)
s_hat_intercept = summary(modelo)$coefficients[1, 2]
(lim_sup_int_b0 = modelo$coefficients[1] - t_b0*s_hat_intercept)
(lim_inf_int_b0 = modelo$coefficients[1] + t_b0*s_hat_intercept)
t_b0
t_b0 = qt(p = 1-(0.05/2), df = nrow(florida) - 2)
s_hat_intercept = summary(modelo)$coefficients[1, 2]
(lim_sup_int_b0 = modelo$coefficients[1] - t_b0*s_hat_intercept)
(lim_inf_int_b0 = modelo$coefficients[1] + t_b0*s_hat_intercept)
t_b0
knitr::opts_chunk$set(echo = TRUE)
florida <- read.table("~/Desktop/UDESA/004_regresion_avanzada/02_Trabajos_practicos/Práctica_1/florida.txt", header=TRUE, quote="\"")
head(florida)
plot(florida, main = "CONSUMO EXPLICADO A PARTIR DEL INGRESO",
col = "blue",
pch = 10)
(modelo = lm(formula = florida$Consumo ~ florida$Ingreso))
summary(modelo)
t_b0 = qt(p = 1-(0.05/2), df = nrow(florida) - 2)
s_hat_intercept = summary(modelo)$coefficients[1, 2]
(lim_sup_int_b0 = modelo$coefficients[1] - t_b0*s_hat_intercept)
(lim_inf_int_b0 = modelo$coefficients[1] + t_b0*s_hat_intercept)
t_b0
t_b0 = qt(p = 1-(0.05/2), df = nrow(florida) - 2)
s_hat_intercept = summary(modelo)$coefficients[1, 2]
(lim_sup_int_b0 = modelo$coefficients[1] - t_b0*s_hat_intercept)
(lim_inf_int_b0 = modelo$coefficients[1] + t_b0*s_hat_intercept)
