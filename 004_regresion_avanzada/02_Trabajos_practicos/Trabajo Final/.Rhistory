labs(title="PBI per capita en cada ciudad")+
xlab('Ciudades')
boxplot(SegVial$DenPob, main = "Densidad Poblacional", col = "blue", horizontal = T)
SegVial %>% ggplot(aes(x=reorder(Ciudad,DenPob,max), y=DenPob))+ geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Densidad Poblacional de cada ciudad")+
xlab('Ciudades')
aux_plot$km2 = aux_plot$Poblacion / aux_plot$DenPob
aux_plot %>% ggplot(aes(x=reorder(Ciudad,km2,max), y=km2))+ geom_bar(stat = 'identity', col='black') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="km2 de cada ciudad")+
xlab('Ciudades')
#Creamos sumatoria de accientes
SegVial$accidentes_viales = SegVial$PeatAuto + SegVial$CicAuto + SegVial$V2RMSM + SegVial$V2RMAuto + SegVial$AutoAuto + SegVial$AutoSM
color <- brewer.pal(6, "Pastel1")
pie(c(sum(SegVial$PeatAuto), sum(SegVial$CicAuto), sum(SegVial$V2RMSM),
sum(SegVial$V2RMAuto), sum(SegVial$AutoSM), sum(SegVial$AutoAuto)),
labels = c(" PEATON->AUTO (27.6%)"," CICLISTA->AUTO (11.9%)", " DOS RUEDAS(M)->SI MISMOS (8.6%)",
" DOS RUEDAS(M)->AUTO (29.2%)", " AUTO->SI MISMOS (7%)", " AUTO->AUTO (15.7%)"),
col = color, main = "DISTRIBUCION DE LOS ACCIDENTES EN EL DATASET")
incidencias = copy(SegVial)
incidencias = incidencias %>% select(Ciudad, V2RMSM, V2RMAuto, AutoAuto, AutoSM, PeatAuto, CicAuto, accidentes_viales)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(dplyr)
library(GGally)
library(mltools)
library(data.table)
library(glmnet)
library(car)
library(RColorBrewer)
library(MASS)
set.seed(999)
SegVial <- read_excel("SegVial.xlsx")
(head(SegVial,3))
glimpse(SegVial)
SegVial[,c(6, 7, 8, 9, 10, 11, 18, 19)] = lapply(SegVial[,c(6, 7, 8, 9, 10, 11, 18, 19)], function(x) as.numeric(x))
summary(SegVial)
boxplot(SegVial$Poblacion, main = "Poblacion", col = "blue", horizontal = T)
SegVial %>% ggplot(aes(x=reorder(Ciudad,Poblacion,max), y=Poblacion))+ geom_bar(stat = 'identity', col='red') +
geom_bar(stat = 'identity', aes(x=Ciudad, y=PBI), col='blue') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Población y PBI en cada ciudad")+
xlab('Ciudades')
aux_plot = copy(SegVial)
aux_plot$PBI_per_capita = aux_plot$PBI / aux_plot$Poblacion
aux_plot %>% ggplot(aes(x=reorder(Ciudad,PBI_per_capita,max), y=PBI_per_capita))+ geom_bar(stat = 'identity', col='green') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="PBI per capita en cada ciudad")+
xlab('Ciudades')
boxplot(SegVial$DenPob, main = "Densidad Poblacional", col = "blue", horizontal = T)
SegVial %>% ggplot(aes(x=reorder(Ciudad,DenPob,max), y=DenPob))+ geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Densidad Poblacional de cada ciudad")+
xlab('Ciudades')
aux_plot$km2 = aux_plot$Poblacion / aux_plot$DenPob
aux_plot %>% ggplot(aes(x=reorder(Ciudad,km2,max), y=km2))+ geom_bar(stat = 'identity', col='black') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="km2 de cada ciudad")+
xlab('Ciudades')
#Creamos sumatoria de accientes
SegVial$accidentes_viales = SegVial$PeatAuto + SegVial$CicAuto + SegVial$V2RMSM + SegVial$V2RMAuto + SegVial$AutoAuto + SegVial$AutoSM
color <- brewer.pal(6, "Pastel1")
pie(c(sum(SegVial$PeatAuto), sum(SegVial$CicAuto), sum(SegVial$V2RMSM),
sum(SegVial$V2RMAuto), sum(SegVial$AutoSM), sum(SegVial$AutoAuto)),
labels = c(" PEATON->AUTO (27.6%)"," CICLISTA->AUTO (11.9%)", " DOS RUEDAS(M)->SI MISMOS (8.6%)",
" DOS RUEDAS(M)->AUTO (29.2%)", " AUTO->SI MISMOS (7%)", " AUTO->AUTO (15.7%)"),
col = color, main = "DISTRIBUCION DE LOS ACCIDENTES EN EL DATASET")
incidencias = copy(SegVial)
incidencias = incidencias %>% select(Ciudad, V2RMSM, V2RMAuto, AutoAuto, AutoSM, PeatAuto, CicAuto, accidentes_viales)
SegVial
incidencias = copy(SegVial)
incidencias = incidencias %>% dplyr::select(Ciudad, V2RMSM, V2RMAuto, AutoAuto, AutoSM, PeatAuto, CicAuto, accidentes_viales)
incidencias$V2RMSM = round(incidencias$V2RMSM / incidencias$accidentes_viales,4)
incidencias$V2RMAuto = round(incidencias$V2RMAuto / incidencias$accidentes_viales,4)
incidencias$AutoAuto = round(incidencias$AutoAuto / incidencias$accidentes_viales,4)
incidencias$AutoSM = round(incidencias$AutoSM / incidencias$accidentes_viales,4)
incidencias$PeatAuto = round(incidencias$PeatAuto / incidencias$accidentes_viales,4)
incidencias$CicAuto = round(incidencias$CicAuto / incidencias$accidentes_viales,4)
incidencias = melt(incidencias)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(dplyr)
library(GGally)
library(mltools)
library(data.table)
library(glmnet)
library(car)
library(RColorBrewer)
library(MASS)
set.seed(999)
SegVial <- read_excel("SegVial.xlsx")
(head(SegVial,3))
glimpse(SegVial)
SegVial[,c(6, 7, 8, 9, 10, 11, 18, 19)] = lapply(SegVial[,c(6, 7, 8, 9, 10, 11, 18, 19)], function(x) as.numeric(x))
summary(SegVial)
boxplot(SegVial$Poblacion, main = "Poblacion", col = "blue", horizontal = T)
SegVial %>% ggplot(aes(x=reorder(Ciudad,Poblacion,max), y=Poblacion))+ geom_bar(stat = 'identity', col='red') +
geom_bar(stat = 'identity', aes(x=Ciudad, y=PBI), col='blue') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Población y PBI en cada ciudad")+
xlab('Ciudades')
aux_plot = copy(SegVial)
aux_plot$PBI_per_capita = aux_plot$PBI / aux_plot$Poblacion
aux_plot %>% ggplot(aes(x=reorder(Ciudad,PBI_per_capita,max), y=PBI_per_capita))+ geom_bar(stat = 'identity', col='green') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="PBI per capita en cada ciudad")+
xlab('Ciudades')
boxplot(SegVial$DenPob, main = "Densidad Poblacional", col = "blue", horizontal = T)
SegVial %>% ggplot(aes(x=reorder(Ciudad,DenPob,max), y=DenPob))+ geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Densidad Poblacional de cada ciudad")+
xlab('Ciudades')
aux_plot$km2 = aux_plot$Poblacion / aux_plot$DenPob
aux_plot %>% ggplot(aes(x=reorder(Ciudad,km2,max), y=km2))+ geom_bar(stat = 'identity', col='black') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="km2 de cada ciudad")+
xlab('Ciudades')
#Creamos sumatoria de accientes
SegVial$accidentes_viales = SegVial$PeatAuto + SegVial$CicAuto + SegVial$V2RMSM + SegVial$V2RMAuto + SegVial$AutoAuto + SegVial$AutoSM
color <- brewer.pal(6, "Pastel1")
pie(c(sum(SegVial$PeatAuto), sum(SegVial$CicAuto), sum(SegVial$V2RMSM),
sum(SegVial$V2RMAuto), sum(SegVial$AutoSM), sum(SegVial$AutoAuto)),
labels = c(" PEATON->AUTO (27.6%)"," CICLISTA->AUTO (11.9%)", " DOS RUEDAS(M)->SI MISMOS (8.6%)",
" DOS RUEDAS(M)->AUTO (29.2%)", " AUTO->SI MISMOS (7%)", " AUTO->AUTO (15.7%)"),
col = color, main = "DISTRIBUCION DE LOS ACCIDENTES EN EL DATASET")
incidencias = copy(SegVial)
incidencias = incidencias %>% dplyr::select(Ciudad, V2RMSM, V2RMAuto, AutoAuto, AutoSM, PeatAuto, CicAuto, accidentes_viales)
incidencias$V2RMSM = round(incidencias$V2RMSM / incidencias$accidentes_viales,4)
incidencias$V2RMAuto = round(incidencias$V2RMAuto / incidencias$accidentes_viales,4)
incidencias$AutoAuto = round(incidencias$AutoAuto / incidencias$accidentes_viales,4)
incidencias$AutoSM = round(incidencias$AutoSM / incidencias$accidentes_viales,4)
incidencias$PeatAuto = round(incidencias$PeatAuto / incidencias$accidentes_viales,4)
incidencias$CicAuto = round(incidencias$CicAuto / incidencias$accidentes_viales,4)
incidencias = melt(incidencias)
incidencias[incidencias$variable!='accidentes_viales',] %>% ggplot(aes(x=Ciudad ,y=value, fill  = variable))+ geom_bar(stat = "identity") +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Incidencia del tipo de accidentes por ciudad")
par(mfrow = c(3, 2))
boxplot(SegVial$PeatAuto, col = "blue",
main = "PEATON->AUTO", horizontal = T)
boxplot(SegVial$CicAuto, col = "blue",
main = "CICLISTA->AUTO", horizontal = T)
boxplot(SegVial$V2RMSM, col = "blue",
main = "MOTO->SI MISMO", horizontal = T)
boxplot(SegVial$V2RMAuto, col = "blue",
main = "MOTO->AUTO", horizontal = T)
boxplot(SegVial$AutoSM, col = "blue",
main = "AUTO->SI MISMO", horizontal = T)
boxplot(SegVial$AutoAuto, col = "blue",
main = "AUTO->AUTO", horizontal = T)
aux_para_plot = reshape2::melt(SegVial[,c('Ciudad','V2RMSM','V2RMAuto','AutoAuto','AutoSM','PeatAuto','CicAuto','accidentes_viales')], value.name = "accidentes")
aux_para_plot %>% ggplot(aes(x=Ciudad ,y=accidentes, alpha=.2, color = variable))+ geom_point() +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Cantidad de accidentes por tipo en cada ciudad")
SegVial %>% ggplot(aes(x=reorder(Ciudad,PeatAuto,max), y=PeatAuto))+
geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Accidentes Peaton-Auto")+
xlab('Ciudades')
SegVial %>% ggplot(aes(x=reorder(Ciudad,CicAuto,max), y=CicAuto))+
geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Accidentes Cic-Auto")+
xlab('Ciudades')
SegVial %>% ggplot(aes(x=reorder(Ciudad,V2RMAuto,max), y=V2RMAuto))+
geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Accidentes V2RM-Auto")+
xlab('Ciudades')
SegVial %>% ggplot(aes(x=reorder(Ciudad,AutoSM,max), y=AutoSM))+
geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Accidentes AutoSM")+
xlab('Ciudades')
SegVial %>% ggplot(aes(x=reorder(Ciudad,AutoAuto,max), y=AutoAuto))+
geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Accidentes Auto-Auto")+
xlab('Ciudades')
SegVial %>% ggplot(aes(x=reorder(Ciudad,V2RMSM,max), y=V2RMSM))+
geom_bar(stat = 'identity', col='red') +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="Accidentes V2RSM")+
xlab('Ciudades')
par(mfrow = c(2,1))
boxplot(SegVial$ArCiclista, main = "Area Ciclista vs Motor", col = "blue",horizontal = T)
boxplot(SegVial$ArBajaVel, main = "Area baja velocidad", col = "blue",horizontal = T)
round(mean(SegVial$ArBajaVel), 2)
SegVial %>%
dplyr::select(Pais, Ciudad, ArCiclista) %>%
arrange(-ArCiclista) %>% head(2)
aux_para_plot = reshape2::melt(SegVial[,c('Ciudad','PMPeatones','PMCiclistas','PMTPublico','PMVMotor')], value.name = "PM")
aux_para_plot %>% ggplot(aes(x=Ciudad ,y=PM, alpha=.2, fill  = variable))+ geom_bar(stat = "identity") +
theme(axis.text.x=element_text(angle = 90)) +
labs(title="PM por tipo de movilidad en cada ciudad")
par(mfrow = c(2,1))
boxplot(SegVial$Temp, main = "TEMPERATURA MEDIA [C]", col = "blue", horizontal = T)
boxplot(SegVial$Precipitacion, main = "PRECIPITACION MEDIA [mm]", col = "blue", horizontal = T)
SegVial %>%
dplyr::select(Pais, Ciudad, Precipitacion) %>%
arrange(-Precipitacion) %>% head(1)
par(mfrow = c(2, 2))
plot(y = SegVial$PMCiclistas, x = SegVial$Precipitacion, col = "blue",
main = "modal CICLISTAS vs mm PRECIPITADOS",
xlab = "mm PRECIPITADOS", ylab = "CICLISTAS [%]")
plot(y = SegVial$PMPeatones, x = SegVial$Precipitacion, col = "blue",
main = "modal PEATONES vs mm PRECIPITADOS",
xlab = "mm PRECIPITADOS", ylab = "PEATONES [%]")
plot(y = SegVial$PMCiclistas, x = SegVial$Temp, col = "blue",
main = "modal CICLISTAS vs Temp Media")
plot(y = SegVial$PMPeatones, x = SegVial$Temp, col = "blue",
main = "modal PEATONES vs Temp Media")
cor(SegVial$PMCiclistas, SegVial[, c(18:19)], method = "spearman")
cor(SegVial$PMPeatones, SegVial[, c(18:19)], method = "spearman")
cor(SegVial$PMTPublico, SegVial[, c(18:19)], method = "spearman")
cor(SegVial$PMVMotor, SegVial[, c(18:19)], method = "spearman")
par(mfrow = c(2,3))
plot(SegVial$DenPob, SegVial$AutoAuto, main='DenPob vs accidentes Auto-Auto')
plot(SegVial$DenPob, SegVial$AutoSM, main='DenPob vs accidentes AutoSM')
plot(SegVial$DenPob, SegVial$V2RMAuto, main='DenPob vs accidentes V2RM-Auto')
plot(SegVial$DenPob, SegVial$V2RMSM, main='DenPob vs accidentes V2RMSM')
plot(SegVial$DenPob, SegVial$PeatAuto, main='DenPob vs accidentes Peat-Auto')
plot(SegVial$DenPob, SegVial$CicAuto, main='DenPob vs accidentes Cic-Auto')
par(mfrow = c(2,3))
plot(SegVial$Poblacion, SegVial$AutoAuto, main='Poblacion vs accidentes Auto-Auto')
plot(SegVial$Poblacion, SegVial$AutoSM, main='Poblacion vs accidentes AutoSM')
plot(SegVial$Poblacion, SegVial$V2RMAuto, main='Poblacion vs accidentes V2RM-Auto')
plot(SegVial$Poblacion, SegVial$V2RMSM, main='Poblacion vs accidentes V2RMSM')
plot(SegVial$Poblacion, SegVial$PeatAuto, main='Poblacion vs accidentes Peat-Auto')
plot(SegVial$Poblacion, SegVial$CicAuto, main='Poblacion vs accidentes Cic-Auto')
t(cor(SegVial$Poblacion, SegVial[, c(12:17)],
method = "spearman"))
df_pairs_1 = SegVial[,-c(1:3, 5, 12:20)]
ggpairs(df_pairs_1, progress = F)
df_pairs_2 = SegVial[,c(18:21)]
ggpairs(df_pairs_2, progress = F)
SegVial$PeatAuto_std = (SegVial$PeatAuto / SegVial$Poblacion) * (10 ^ 6)
SegVial$CicAuto_std  = (SegVial$CicAuto  / SegVial$Poblacion) * (10 ^ 6)
SegVial$V2RMSM_std   = (SegVial$V2RMSM   / SegVial$Poblacion) * (10 ^ 6)
SegVial$V2RMAuto_std = (SegVial$V2RMAuto / SegVial$Poblacion) * (10 ^ 6)
SegVial$AutoSM_std   = (SegVial$AutoSM   / SegVial$Poblacion) * (10 ^ 6)
SegVial$AutoAuto_std = (SegVial$AutoAuto / SegVial$Poblacion) * (10 ^ 6)
SegVial$accidentes_viales_std = (SegVial$accidentes_viales / SegVial$Poblacion) * (10 ^ 6)
SegVial[,-c(1:3, 12:17, 21:26)] = as.data.frame(scale(SegVial[,-c(1:3, 12:17, 21:26)]))
head(SegVial)
df_peatauto = SegVial[, -c(1:3, 12:17, 21, 23:28)]
df_cicauto  = SegVial[, -c(1:3, 12:17, 21, 22, 24:28)]
df_v2rmsm   = SegVial[, -c(1:3, 12:17, 21, 23, 25:28)]
df_v2rmauto = SegVial[, -c(1:3 ,12:17, 21:24, 26:28)]
df_autosm   = SegVial[, -c(1:3 ,12:17, 21:25, 27:28)]
df_autoauto = SegVial[, -c(1:3 ,12:17, 21:26, 28)]
df_accidentesviales = SegVial[, -c(1:3 ,12:17, 21:27)]
modelo_peatauto_ls = lm(PeatAuto_std ~., df_peatauto)
summary(modelo_peatauto_ls)
barplot(log(vif(modelo_peatauto_ls))[vif(modelo_peatauto_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
modelo_peatauto_wise=step(modelo_peatauto_ls, direction = c("both"), trace = F)
summary(modelo_peatauto_wise)
barplot(log(vif(modelo_peatauto_wise))[vif(modelo_peatauto_wise) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
xx = model.matrix(PeatAuto_std ~., data = df_peatauto)[, -1]
modelo_peatauto_lassocv <- cv.glmnet(xx, y = df_peatauto$PeatAuto_std,
alpha = 1,
nfolds = 5)
modelo_peatauto_lassocv_min <- glmnet(xx, y = df_peatauto$PeatAuto_std,
alpha = 1,
lambda = modelo_peatauto_lassocv$lambda.min)
modelo_peatauto_lassocv_1sd <- glmnet(xx, y = df_peatauto$PeatAuto_std,
alpha = 1,
lambda = modelo_peatauto_lassocv$lambda.1se)
cbind(coef(modelo_peatauto_lassocv_min),
coef(modelo_peatauto_lassocv_1sd))
modelo_peatauto_ls_2=lm(PeatAuto_std ~ ArCiclista + PMPeatones, data = df_peatauto)
summary(modelo_peatauto_ls_2)
par(mfrow=c(2,2))
plot(modelo_peatauto_ls_2)
library(RobStatTM)
control = lmrobdet.control(bb = 0.5, efficiency = 0.85, family = "bisquare")
modelo_MM_peatauto= lmrobdetMM(PeatAuto_std ~ ArCiclista +
PMPeatones, data = df_peatauto, control = control)
summary(modelo_MM_peatauto)
plot(modelo_MM_peatauto$residuals, modelo_MM_peatauto$rweights,
main = "ESTUDIO DE OUTLIERS", xlab = "RESIDUOS", ylab = "RWEIGHTS", col = "blue")
modelo_cicauto_ls = lm(CicAuto_std ~., data = df_cicauto)
summary(modelo_cicauto_ls)
barplot(log(vif(modelo_cicauto_ls))[vif(modelo_cicauto_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
modelo_cicauto_wise=step(modelo_cicauto_ls, direction = c("both"), trace = F)
summary(modelo_cicauto_wise)
xx = model.matrix(CicAuto_std ~., data = df_cicauto)[, -1]
modelo_cicauto_lassocv <- cv.glmnet(xx, y = df_cicauto$CicAuto_std,
alpha = 1,
nfolds = 5)
modelo_cicauto_lassocv_min <- glmnet(xx, y = df_cicauto$CicAuto_std,
alpha = 1,
lambda = modelo_cicauto_lassocv$lambda.min)
modelo_cicauto_lassocv_1sd <- glmnet(xx, y = df_cicauto$CicAuto_std,
alpha = 1,
lambda = modelo_cicauto_lassocv$lambda.1se)
cbind(coef(modelo_cicauto_lassocv_min),
coef(modelo_cicauto_lassocv_1sd))
modelo_cicauto_ls_2=lm(CicAuto_std ~ PMPeatones + Temp, data = df_cicauto)
summary(modelo_cicauto_ls_2)
par(mfrow=c(2,2))
plot(modelo_cicauto_wise)
modelo_MM_cicauto = lmrobdetMM(CicAuto_std ~ PMPeatones + Temp, data = df_cicauto, control = control)
summary(modelo_MM_cicauto)
plot(modelo_MM_cicauto$residuals, modelo_MM_cicauto$rweights,
main = "ESTUDIO DE OUTLIERS", xlab = "RESIDUOS", ylab = "RWEIGHTS", col = "blue")
sort(modelo_MM_cicauto$rweights)[1]
modelo_cicauto_ls_3 = lm(CicAuto_std ~ PMPeatones + Temp, data = df_cicauto[-c(20),])
summary(modelo_cicauto_ls_3)
modelo_v2rmsm_ls = lm(V2RMSM_std ~., data = df_v2rmsm)
summary(modelo_v2rmsm_ls)
barplot(log(vif(modelo_v2rmsm_ls))[vif(modelo_v2rmsm_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
modelo_v2rmsm_wise=step(modelo_v2rmsm_ls, direction = c("both"), trace = F)
summary(modelo_v2rmsm_wise)
xx = model.matrix(V2RMSM_std ~., data = df_v2rmsm)[, -1]
modelo_v2rmsm_lassocv <- cv.glmnet(xx, y = df_v2rmsm$V2RMSM_std,
alpha = 1,
nfolds = 5)
modelo_v2rmsm_lassocv_min <- glmnet(xx, y = df_v2rmsm$V2RMSM_std,
alpha = 1,
lambda = modelo_v2rmsm_lassocv$lambda.min)
modelo_v2rmsm_lassocv_1sd <- glmnet(xx, y = df_v2rmsm$V2RMSM_std,
alpha = 1,
lambda = modelo_v2rmsm_lassocv$lambda.1se)
cbind(coef(modelo_v2rmsm_lassocv_min),
coef(modelo_v2rmsm_lassocv_1sd))
modelo_v2rmsm_ls_2=lm(V2RMSM_std ~ Poblacion + ArBajaVel + PMCiclistas+
Precipitacion + Temp, data = df_v2rmsm)
summary(modelo_v2rmsm_ls_2)
par(mfrow=c(2,2))
plot(modelo_v2rmsm_ls_2)
modelo_MM_v2rmsm = lmrobdetMM(V2RMSM_std ~ Poblacion + ArBajaVel + PMCiclistas +
Precipitacion + Temp, data = df_v2rmsm, control = control)
summary(modelo_MM_v2rmsm)
plot(modelo_MM_v2rmsm$residuals, modelo_MM_v2rmsm$rweights,
main = "ESTUDIO DE OUTLIERS", xlab = "RESIDUOS", ylab = "RWEIGHTS", col = "blue")
sort(modelo_MM_v2rmsm$rweights)[1]
SegVial[c(6) ,"Ciudad"]
modelo_v2rmsm_ls_3 = lm(V2RMSM_std ~ Poblacion + ArBajaVel + PMCiclistas +
Precipitacion + Temp, data = df_v2rmsm[-c(6),])
summary(modelo_v2rmsm_ls_3)
#
df_v2rmsm$PMCiclistas = df_v2rmsm$PMCiclistas + 1
df_v2rmsm$Precipitacion = df_v2rmsm$Precipitacion + 2.1
df_v2rmsm$Temp = df_v2rmsm$Temp + 2
#
# boxTidwell(V2RMSM_std ~ Precipitacion + PMCiclistas + Temp, data = df_v2rmsm[-c(6), ])
df_v2rmsm$PMCiclistas2 = 1/sqrt(df_v2rmsm$PMCiclistas)
df_v2rmsm$Temp = sqrt(df_v2rmsm$Temp)
df_v2rmsm$Precipitacion2 = df_v2rmsm$Precipitacion^2
modelo_v2rmsm_ls_3 = lm(V2RMSM_std ~ Poblacion + ArBajaVel +
PMCiclistas2 + Precipitacion2 + Temp , data = df_v2rmsm[-c(6),])
summary(modelo_v2rmsm_ls_3)
modelo_v2rmsm_wise2 = step(modelo_v2rmsm_ls_3, direction = c("both"), trace = F)
summary(modelo_v2rmsm_wise2)
modelo_v2rmauto_ls = lm(V2RMAuto_std ~., data = df_v2rmauto)
summary(modelo_v2rmauto_ls)
modelo_v2rmauto_wise = step(modelo_v2rmauto_ls, direction = c("both"),
trace = F)
summary(modelo_v2rmauto_wise)
barplot(log(vif(modelo_v2rmauto_wise))[vif(modelo_v2rmauto_wise) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
xx = model.matrix(V2RMAuto_std ~., data = df_v2rmauto)[, -1]
modelo_v2rmauto_lassocv <- cv.glmnet(xx, y = df_v2rmauto$V2RMAuto_std,
alpha = 1,
nfolds = 5)
modelo_v2rmauto_lassocv_min <- glmnet(xx, y = df_v2rmauto$V2RMAuto_std,
alpha = 1,
lambda = modelo_v2rmauto_lassocv$lambda.min)
modelo_v2rmauto_lassocv_1sd <- glmnet(xx, y = df_v2rmauto$V2RMAuto_std,
alpha = 1,
lambda = modelo_v2rmauto_lassocv$lambda.1se)
cbind(coef(modelo_v2rmauto_lassocv_min),
coef(modelo_v2rmauto_lassocv_1sd))
modelo_v2rmauto_ls_2=lm(V2RMAuto_std ~ Poblacion + ArCiclista +
Precipitacion + Temp, data = df_v2rmauto)
summary(modelo_v2rmauto_ls_2)
modelo_v2rmauto_wise_2=step(modelo_v2rmauto_ls_2, direction = c("both"),
trace = F)
summary(modelo_v2rmauto_wise_2)
modelo_MM_v2rmauto= lmrobdetMM(V2RMAuto_std ~ Poblacion + ArCiclista + Precipitacion +
Temp, data = df_v2rmauto, control = control)
plot(modelo_MM_v2rmauto$residuals, modelo_MM_v2rmauto$rweights)
sort(modelo_MM_v2rmauto$rweights)[1:2]
modelo_v2rmauto_wise_3=step(lm(V2RMAuto_std ~ ., data = df_v2rmauto[-c(6, 9),]),
direction = c("both"),
trace = F)
summary(modelo_v2rmauto_wise_3)
par(mfrow=c(2,2))
plot(modelo_v2rmauto_wise_3)
library(car)
modelo_autosm_ls=lm(AutoSM_std ~., data = df_autosm)
summary(modelo_autosm_ls)
barplot(log(vif(modelo_autosm_ls))[vif(modelo_autosm_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
xx = model.matrix(AutoSM_std ~., data = df_autosm)[, -1]
modelo_autosm_lassocv <- cv.glmnet(xx, y = df_autosm$AutoSM_std,
alpha = 1,
nfolds = 5,
maxit=1000000)
modelo_autosm_lassocv_min <- glmnet(xx, y = df_autosm$AutoSM_std,
alpha = 1,
lambda = modelo_autosm_lassocv$lambda.min)
modelo_autosm_lassocv_1sd <- glmnet(xx, y = df_autosm$AutoSM_std,
alpha = 1,
lambda = modelo_autosm_lassocv$lambda.1se)
cbind(coef(modelo_autosm_lassocv_min),
coef(modelo_autosm_lassocv_1sd))
modelo_autosm_ls2 = lm(AutoSM_std ~ ArCiclista + ArBajaVel + PMPeatones,
data = df_autosm)
summary(modelo_autosm_ls2)
par(mfrow=c(2,2))
plot(modelo_autosm_ls2)
df_autosm$AutoSM_std = df_autosm$AutoSM_std + 0.01
boxcox(modelo_autosm_ls2)
df_autosm$AutoSM_std = sqrt(df_autosm$AutoSM_std)
modelo_autosm_ls3 = lm(AutoSM_std ~ ArCiclista + ArBajaVel + PMPeatones,
data = df_autosm)
summary(modelo_autosm_ls3)
par(mfrow=c(2,2))
plot(modelo_autosm_ls3)
modelo_MM_autosm = lmrobdetMM(AutoSM_std ~ ArCiclista + ArBajaVel + PMPeatones,
data = df_autosm, control = control)
plot(modelo_MM_autosm$residuals, modelo_MM_autosm$rweights)
modelo_autoauto_ls = lm(AutoAuto_std ~., data = df_autoauto)
summary(modelo_autoauto_ls)
barplot(log(vif(modelo_autoauto_ls))[vif(modelo_autoauto_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
xx = model.matrix(AutoAuto_std ~., data = df_autoauto)[, -1]
modelo_autoauto_lassocv <- cv.glmnet(xx, y = df_autoauto$AutoAuto_std,
alpha = 1,
nfolds = 5)
modelo_autoauto_lassocv_min <- glmnet(xx, y = df_autoauto$AutoAuto_std,
alpha = 1,
lambda = modelo_autoauto_lassocv$lambda.min)
modelo_autoauto_lassocv_1sd <- glmnet(xx, y = df_autoauto$AutoAuto_std,
alpha = 1,
lambda = modelo_autoauto_lassocv$lambda.1se)
cbind(coef(modelo_autoauto_lassocv_min),
coef(modelo_autoauto_lassocv_1sd))
modelo_autoauto_ls_2 = lm(AutoAuto_std ~ ArCiclista + ArBajaVel + PMPeatones, data = df_autoauto)
summary(modelo_autoauto_ls_2)
summary(step(modelo_autoauto_ls_2, direction = c("both"), trace = F))
modelo_MM_autoauto = lmrobdetMM(AutoAuto_std ~ ArCiclista + ArBajaVel +
PMPeatones, data = df_autoauto, control = control)
plot(modelo_MM_autoauto$residuals, modelo_MM_autoauto$rweights)
sort(modelo_MM_autoauto$rweights)[1:2]
modelo_autoauto_ls_3=lm(AutoAuto_std ~ ArCiclista + ArBajaVel + PMPeatones,
data = df_autoauto[-c(13, 22),])
summary(modelo_autoauto_ls_3)
par(mfrow=c(2,2))
plot(modelo_autoauto_ls_3)
cor.test(abs(modelo_autoauto_ls_3$residuals),
modelo_autoauto_ls_3$fitted.values, method = "spearman")
vif(modelo_autoauto_ls_3)
modelo_accidentes_viales_ls = lm(accidentes_viales_std ~. ,df_accidentesviales)
summary(modelo_accidentes_viales_ls)
barplot(log(vif(modelo_accidentes_viales_ls))[vif(modelo_accidentes_viales_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
xx = model.matrix(accidentes_viales_std ~., data = df_accidentesviales)[, -1]
modelo_accidentesviales_lassocv <- cv.glmnet(xx, y = df_accidentesviales$accidentes_viales_std,
alpha = 1,
nfolds = 5)
modelo_accidentesviales_lassocv_min <- glmnet(xx, y = df_accidentesviales$accidentes_viales_std,
alpha = 1,
lambda = modelo_accidentesviales_lassocv$lambda.min)
modelo_accidentesviales_lassocv_1sd <- glmnet(xx, y = df_accidentesviales$accidentes_viales_std,
alpha = 1,
lambda = modelo_accidentesviales_lassocv$lambda.1se)
cbind(coef(modelo_accidentesviales_lassocv_min),
coef(modelo_accidentesviales_lassocv_1sd))
modelo_accidentes_viales_ls2 = lm(accidentes_viales_std ~ Poblacion + ArCiclista
+ ArBajaVel + PMPeatones, data = df_accidentesviales)
summary(modelo_accidentes_viales_ls2)
vif(modelo_accidentes_viales_ls2)
par(mfrow=c(2,2))
plot(modelo_accidentes_viales_ls2)
modelo_MM_accidentesviales = lmrobdetMM(accidentes_viales_std ~ Poblacion + ArCiclista +
ArBajaVel + PMPeatones, data = df_accidentesviales, control = control)
plot(modelo_MM_accidentesviales$residuals, modelo_MM_accidentesviales$rweights)
barplot(log(vif(modelo_peatauto_ls))[vif(modelo_peatauto_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
barplot(log(vif(modelo_peatauto_ls))[vif(modelo_peatauto_ls) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
barplot(log(vif(modelo_peatauto_wise))[vif(modelo_peatauto_wise) > 5],
main = "log VIF DE LAS COVARIABLES", col = "blue")
abline(h = log(5), lwd = 2, col = "red")
par(mfrow=c(2,2))
plot(modelo_peatauto_ls_2)
plot(modelo_MM_peatauto$residuals, modelo_MM_peatauto$rweights,
main = "ESTUDIO DE OUTLIERS", xlab = "RESIDUOS", ylab = "RWEIGHTS", col = "blue")
par(mfrow=c(2,2))
plot(modelo_cicauto_wise)
plot(modelo_MM_cicauto$residuals, modelo_MM_cicauto$rweights,
main = "ESTUDIO DE OUTLIERS", xlab = "RESIDUOS", ylab = "RWEIGHTS", col = "blue")
