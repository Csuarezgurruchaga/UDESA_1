---
title: "tp_final"
output: html_document
date: "2022-08-17"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
set.seed(999)
```


```{r}
library(tidyverse)
```
1)

```{r}
SegVial <- read_excel("SegVial.xlsx")

head(SegVial)
glimpse(SegVial)
```
Tenemos 20 variables analizadas con 24 datos cada una, no se observan valores NaNs. 11 de esas variables aparecen como categóricas, el resto como cuantitativas. Sin embargo, al observar la tabla de datos, solo 3 deberían ser categóricas. Las demás aparecen como tal por tener decimales. Las vamos a transformar.

```{r}
SegVial[,c(6, 7, 8, 9, 10, 11, 18, 19)] = lapply(SegVial[,c(6, 7, 8, 9, 10, 11, 18, 19)], function(x) as.numeric(x))
summary(SegVial)
```
## Estudio de las covariables poblacionales
```{r}
par(mfrow=c(1, 2))

boxplot(SegVial$Poblacion, main = "Poblacion", col = "blue")
boxplot(SegVial$DenPob, main = "Densidad Poblacional", col = "blue")
```
Se observan 4 

```{r}
SegVial %>% 
  select(Pais, Ciudad,Poblacion, DenPob) %>% 
  arrange(-Poblacion) %>% head(4)
```


```{r}
SegVial %>% 
  select(Pais, Ciudad,Poblacion, DenPob) %>% 
  arrange(-DenPob) %>% head(4)
```


## EXPLORATORY DATA ANALYSIS

Comenzamos por responder algunas preguntas típicas de los accidentes viales:

¿Mayor densidad de poblacion favorece la cantidad de accidentes en general?

```{r}
par(mfrow = c(2,3))
plot(SegVial$DenPob, SegVial$AutoAuto)
plot(SegVial$DenPob, SegVial$AutoSM)
plot(SegVial$DenPob, SegVial$V2RMAuto)
plot(SegVial$DenPob, SegVial$V2RMSM)
plot(SegVial$DenPob, SegVial$PeatAuto)
plot(SegVial$DenPob, SegVial$CicAuto)
```
Por sentido común, esperaríamos que poblaciones con mayor densidad sean propensas a más accidentes, de cualquier tipo, ya que la concentración de gente en zonas más pequeñas deberia impactar en el ordenamiento del tránsito. Sin embargo, los plots no indican esto, por lo que DenPob no pareciera ser una variable muy indicadora del nivel de accidentes. Quizás, la muestra tiene algún tipo de sesgo (son ciudades muy precavidas y/o con densidades muy pequeñas).


¿Mayor cantidad de poblacion favorece a la cantidad de accidentes?

```{r}
par(mfrow = c(2,3))
plot(SegVial$Poblacion, SegVial$AutoAuto)
plot(SegVial$Poblacion, SegVial$AutoSM)
plot(SegVial$Poblacion, SegVial$V2RMAuto)
plot(SegVial$Poblacion, SegVial$V2RMSM)
plot(SegVial$Poblacion, SegVial$PeatAuto)
plot(SegVial$Poblacion, SegVial$CicAuto)
```
```{r}
cor(SegVial$Poblacion, SegVial[, c(12:17)], method = "spearman")
```

Salvo en los accidentes de ciclistas a autos/taxis (CicAuto), la población tiene relación aproximadamente lineal respecto a los distintos tipos de accidentes. No sabemos si las variables de accidente son realmente índices o totales de accidentes. Si fueran lo segunda, tiene sentido el efecto - donde hay más gente, podés reportar más casos-. Sin embargo, como vimos en los gráficos previos, que esa gente esté más o menos distante impacta poco.

De acuerdo a la matriz de covarianzas, no identifico alguna otra variable que tenga mucha relación con las variables de respuesta. Sí identifico relaciones entre variables regresoras que seguramente serán analizadas más adelante; la más destacada entre "PMVMotor" y "PMPeatones".

Entre las variables de respuesta, hay mayor relación lineal pero quizás sea por efecto de que las demás variables impactan de manera similar en cualquier tipo de accidente.


### Target PeatAuto

Vamos a estudiar la distribucion de las variables cuando tomamos como target PeatAuto 

```{r}

df_peaton_auto = SegVial[, -c(1:3, 13:17)]

t(abs(cor(df_peaton_auto$PeatAuto, df_peaton_auto, method = "spearman")))


```
Observamos que las covariables PBI, Temp, PMVMotor y DenPob, tienen poca correlacion lineal con el target.

```{r}
pairs(df_peaton_auto[,-c()])
```


```{r}
library(dplyr)

SegVial_spain = SegVial %>% filter(Pais == "Spain")
SegVial_france = SegVial %>% filter(Pais == "France")
SegVial_united_kingdom = SegVial %>% filter(Pais == "United Kingdom")
SegVial_italy = SegVial %>% filter(Pais == "Italy")
SegVial_norway = SegVial %>% filter(Pais == "Norway")
```


```{r}
pairs(SegVial_spain[-c(1,2,3)])
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```


```{r}
```

